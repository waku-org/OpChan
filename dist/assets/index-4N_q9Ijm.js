const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DCwOSe4Q.js","assets/hooks.module-Dz_XB4AG.js","assets/index-Cr5N_0pd.js","assets/index-BXHa4upX.css","assets/hashTypedData-D0Cx__mD.js","assets/index-Dl0F4g05.js","assets/index-COonna6N.js","assets/index-Cl4M8jG7.js","assets/index-sYri9oP4.js"])))=>i.map(i=>d[i]);
import{d as _,g as w,U as p,_ as m,S as y,C as A,n as C,P as g,w as P}from"./index-Cr5N_0pd.js";import{e as q}from"./index-Cr5N_0pd.js";I.type="coinbaseWallet";function I(a={}){return a.version==="3"||a.headlessMode?E(a):U(a)}function U(a){let f,u,d,c;return _(o=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:I.type,async connect({chainId:t,...r}={}){try{const e=await this.getProvider(),n=(await e.request({method:"eth_requestAccounts",params:"instantOnboarding"in r&&r.instantOnboarding?[{onboarding:"instant"}]:[]})).map(s=>w(s));u||(u=this.onAccountsChanged.bind(this),e.on("accountsChanged",u)),d||(d=this.onChainChanged.bind(this),e.on("chainChanged",d)),c||(c=this.onDisconnect.bind(this),e.on("disconnect",c));let i=await this.getChainId();return t&&i!==t&&(i=(await this.switchChain({chainId:t}).catch(l=>{if(l.code===p.code)throw l;return{id:i}}))?.id??i),{accounts:n,chainId:i}}catch(e){throw/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(e.message)?new p(e):e}},async disconnect(){const t=await this.getProvider();u&&(t.removeListener("accountsChanged",u),u=void 0),d&&(t.removeListener("chainChanged",d),d=void 0),c&&(t.removeListener("disconnect",c),c=void 0),t.disconnect(),t.close?.()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(r=>w(r))},async getChainId(){const r=await(await this.getProvider()).request({method:"eth_chainId"});return Number(r)},async getProvider(){if(!f){const t=typeof a.preference=="string"?{options:a.preference}:{...a.preference,options:a.preference?.options??"all"},{createCoinbaseWalletSDK:r}=await m(async()=>{const{createCoinbaseWalletSDK:n}=await import("./index-DCwOSe4Q.js");return{createCoinbaseWalletSDK:n}},__vite__mapDeps([0,1,2,3,4]));f=r({...a,appChainIds:o.chains.map(n=>n.id),preference:t}).getProvider()}return f},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:t,chainId:r}){const e=o.chains.find(i=>i.id===r);if(!e)throw new y(new A);const n=await this.getProvider();try{return await n.request({method:"wallet_switchEthereumChain",params:[{chainId:C(e.id)}]}),e}catch(i){if(i.code===4902)try{let s;t?.blockExplorerUrls?s=t.blockExplorerUrls:s=e.blockExplorers?.default.url?[e.blockExplorers?.default.url]:[];let l;t?.rpcUrls?.length?l=t.rpcUrls:l=[e.rpcUrls.default?.http[0]??""];const h={blockExplorerUrls:s,chainId:C(r),chainName:t?.chainName??e.name,iconUrls:t?.iconUrls,nativeCurrency:t?.nativeCurrency??e.nativeCurrency,rpcUrls:l};return await n.request({method:"wallet_addEthereumChain",params:[h]}),e}catch(s){throw new p(s)}throw new y(i)}},onAccountsChanged(t){t.length===0?this.onDisconnect():o.emitter.emit("change",{accounts:t.map(r=>w(r))})},onChainChanged(t){const r=Number(t);o.emitter.emit("change",{chainId:r})},async onDisconnect(t){o.emitter.emit("disconnect");const r=await this.getProvider();u&&(r.removeListener("accountsChanged",u),u=void 0),d&&(r.removeListener("chainChanged",d),d=void 0),c&&(r.removeListener("disconnect",c),c=void 0)}}))}function E(a){let u,d,c,o,t;return _(r=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:I.type,async connect({chainId:e}={}){try{const n=await this.getProvider(),i=(await n.request({method:"eth_requestAccounts"})).map(l=>w(l));c||(c=this.onAccountsChanged.bind(this),n.on("accountsChanged",c)),o||(o=this.onChainChanged.bind(this),n.on("chainChanged",o)),t||(t=this.onDisconnect.bind(this),n.on("disconnect",t));let s=await this.getChainId();return e&&s!==e&&(s=(await this.switchChain({chainId:e}).catch(h=>{if(h.code===p.code)throw h;return{id:s}}))?.id??s),{accounts:i,chainId:s}}catch(n){throw/(user closed modal|accounts received is empty|user denied account)/i.test(n.message)?new p(n):n}},async disconnect(){const e=await this.getProvider();c&&(e.removeListener("accountsChanged",c),c=void 0),o&&(e.removeListener("chainChanged",o),o=void 0),t&&(e.removeListener("disconnect",t),t=void 0),e.disconnect(),e.close()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(n=>w(n))},async getChainId(){const n=await(await this.getProvider()).request({method:"eth_chainId"});return Number(n)},async getProvider(){if(!d){const e=await(async()=>{const{default:h}=await m(async()=>{const{default:v}=await import("./index-Dl0F4g05.js").then(b=>b.i);return{default:v}},__vite__mapDeps([5,2,3,6,1]));return typeof h!="function"&&typeof h.default=="function"?h.default:h})();u=new e({...a,reloadOnDisconnect:!1});const n=u.walletExtension?.getChainId(),i=r.chains.find(h=>a.chainId?h.id===a.chainId:h.id===n)||r.chains[0],s=a.chainId||i?.id,l=a.jsonRpcUrl||i?.rpcUrls.default.http[0];d=u.makeWeb3Provider(l,s)}return d},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:e,chainId:n}){const i=r.chains.find(l=>l.id===n);if(!i)throw new y(new A);const s=await this.getProvider();try{return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:C(i.id)}]}),i}catch(l){if(l.code===4902)try{let h;e?.blockExplorerUrls?h=e.blockExplorerUrls:h=i.blockExplorers?.default.url?[i.blockExplorers?.default.url]:[];let v;e?.rpcUrls?.length?v=e.rpcUrls:v=[i.rpcUrls.default?.http[0]??""];const b={blockExplorerUrls:h,chainId:C(n),chainName:e?.chainName??i.name,iconUrls:e?.iconUrls,nativeCurrency:e?.nativeCurrency??i.nativeCurrency,rpcUrls:v};return await s.request({method:"wallet_addEthereumChain",params:[b]}),i}catch(h){throw new p(h)}throw new y(l)}},onAccountsChanged(e){e.length===0?this.onDisconnect():r.emitter.emit("change",{accounts:e.map(n=>w(n))})},onChainChanged(e){const n=Number(e);r.emitter.emit("change",{chainId:n})},async onDisconnect(e){r.emitter.emit("disconnect");const n=await this.getProvider();c&&(n.removeListener("accountsChanged",c),c=void 0),o&&(n.removeListener("chainChanged",o),o=void 0),t&&(n.removeListener("disconnect",t),t=void 0)}}))}D.type="safe";function D(a={}){const{shimDisconnect:f=!1}=a;let u,d;return _(c=>({id:"safe",name:"Safe",type:D.type,async connect(){const o=await this.getProvider();if(!o)throw new g;const t=await this.getAccounts(),r=await this.getChainId();return d||(d=this.onDisconnect.bind(this),o.on("disconnect",d)),f&&await c.storage?.removeItem("safe.disconnected"),{accounts:t,chainId:r}},async disconnect(){const o=await this.getProvider();if(!o)throw new g;d&&(o.removeListener("disconnect",d),d=void 0),f&&await c.storage?.setItem("safe.disconnected",!0)},async getAccounts(){const o=await this.getProvider();if(!o)throw new g;return(await o.request({method:"eth_accounts"})).map(w)},async getProvider(){if(typeof window<"u"&&window?.parent!==window){if(!u){const{default:t}=await m(async()=>{const{default:i}=await import("./index-Cl4M8jG7.js").then(s=>s.e);return{default:i}},__vite__mapDeps([7,2,3,4])),r=new t(a),e=await P(()=>r.safe.getInfo(),{timeout:a.unstable_getInfoTimeout??10});if(!e)throw new Error("Could not load Safe information");const n=await(async()=>{const i=await m(()=>import("./index-sYri9oP4.js").then(s=>s.i),__vite__mapDeps([8,2,3,7,4]));return typeof i.SafeAppProvider!="function"&&typeof i.default.SafeAppProvider=="function"?i.default.SafeAppProvider:i.SafeAppProvider})();u=new n(e,r)}return u}},async getChainId(){const o=await this.getProvider();if(!o)throw new g;return Number(o.chainId)},async isAuthorized(){try{return f&&await c.storage?.getItem("safe.disconnected")?!1:!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){c.emitter.emit("disconnect")}}))}export{I as coinbaseWallet,q as injected,D as safe};
